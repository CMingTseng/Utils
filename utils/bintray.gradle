apply plugin: 'com.jfrog.bintray'
//http://stackoverflow.com/questions/43291448/artifact-or-version-defined-in-the-pom-file-do-not-match
if (project.hasProperty("android")) { // Android libraries

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        baseName = rootProject.ext.pomArtifactId
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        options.encoding = "utf-8"
        options.charSet = 'UTF-8'
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        failOnError false
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
    tasks.withType(Compile) { //Here is pure java
        options.encoding = 'UTF-8'
    }
}

tasks.withType(Javadoc).all { enabled = false }

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "utils"
        userOrg = properties.getProperty("bintray.org")
//        desc = libraryDescription
        websiteUrl = rootProject.ext.scmUrl
        vcsUrl = rootProject.ext.scmConnectionUrl
        licenses = ["Apache-2.0"]
        publish = true
        publicDownloadNumbers = true
        version {
//            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                name = rootProject.ext.versionName
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}

//install {
//    repositories.mavenInstaller {
//        // This generates POM. xml  with proper parameters
//        pom {
//            version rootProject.ext.versionName
//            groupId = rootProject.ext.pomGroupId
//            artifactId = rootProject.ext.pomArtifactId
//            project {
//                inceptionYear '2017'
//                packaging 'aar'
//                name 'utils'
//                description 'App Utils Library'
//                url rootProject.ext.scmUrl
//                licenses {
//                    license {
//                        name 'The Apache Software License, Version 2.0'
//                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    }
//                }
//                developers {
//                    developer {
//                        id 'Neo'
//                        name 'Neo'
//                        email 'c.min.tseng@gmail.com'
//                    }
//                }
//                scm {
//                    connection rootProject.ext.scmConnectionUrl
//                    developerConnection rootProject.ext.scmConnectionUrl
//                    url rootProject.ext.scmUrl
//                }
//            }
//        }
//    }
//}