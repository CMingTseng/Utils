apply plugin: 'com.android.library'
apply plugin: 'com.gladed.androidgitversion'

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xbootclasspath/a:" + System.properties.get("java.home") + "/lib/rt.jar"
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 22
        versionName rootProject.ext.versionName
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            shrinkResources false
            zipAlignEnabled true
            minifyEnabled false
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
    }
}

configurations {
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:support-v4:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:design:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:cardview-v7:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:support-v13:${rootProject.ext.supportLibVersion}"
    compile 'com.google.code.gson:gson:+'
    compile 'com.github.bumptech.glide:glide:+'
    compile 'com.rmtheis:tess-two:+'// the last version is 6.3.0
    compile 'com.google.zxing:core:+'
    compile 'com.google.zxing:android-core:+'
}

// 移除舊的 jar 檔
task deleteOldJar(type: Delete) {
    delete 'release/tcp.jar'
}

// 匯出 jar 檔
task exportJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('release/')
    include('classes.jar')
    // 將匯出的 jar 檔重新命名
    rename('classes.jar', 'tcp.jar')
}

//http://stackoverflow.com/questions/37807562/how-to-create-single-jar-with-fatjar-gradle
//https://gist.github.com/kesco/77132337ab0d8dc81016
task createJar(type: Jar) {
    from {
        List<File> allFiles = new ArrayList<>();
        configurations.compile.collect {
            for (File f : zipTree(it).getFiles()) {
                if (f.getName().equals("classes.jar")) {
                    allFiles.addAll(zipTree(f).getAt("asFileTrees").get(0).getDir())
                }
            }
        }
        allFiles.add(new File('build/intermediates/classes/release'))
        allFiles // To return the result inside a lambda
    }
    archiveName('tcp.jar')
}

exportJar.dependsOn(deleteOldJar, build)
//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
apply from: 'install.gradle'
apply from: 'bintray.gradle'
